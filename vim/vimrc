" Don't be vi
  set nocompatible

" Install Plugins
  call plug#begin()
    Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries' }
    Plug 'fatih/molokai'
    Plug 'airblade/vim-gitgutter'
    Plug 'editorconfig/editorconfig-vim'
    Plug 'itchyny/lightline.vim'
    Plug 'scrooloose/nerdtree'
    Plug 'scrooloose/nerdcommenter'
    Plug 'tpope/vim-unimpaired'
    Plug 'tpope/vim-fugitive'
    Plug 'pangloss/vim-javascript'
    Plug 'w0rp/ale'
  call plug#end()

" Keybindings
  let mapleader = " "

" Make Y consistent with D, C, and V
  map Y           y$

" Auto-indent whole file
  map <silent> <F8> mzgg=G'z :delmarks z<CR>:echo "Reformatted."<CR>

" Bubble single lines
  nmap { [e
  nmap } ]e
  vmap { [egv
" Bubble multiple lines
  vmap } ]egv

" General Options
  set backspace=indent,eol,start " Let backspace work over anything.
  set clipboard=                 " use system clipboard
  filetype plugin indent on      " load filetype plugins
  set viminfo+=!                 " make sure it can save viminfo
  set updatetime=100             " Swap file update dealy time

" Color
  syntax enable
  set t_Co=256
  let g:molokai_original = 1
  let g:rehash256 = 1
  colorscheme molokai

" Visual Cues
  set noshowmatch   " show matching brackets
  set hlsearch      " highlight searched for phrases
  set incsearch     " highlight as you type you search phrase
  set history=1024  " History size
  set so=10         " Keep x lines (top/bottom) for scope
  set novisualbell  " don't blink
  set noerrorbells  " no noises

  " Characters to show when whitespace is enabled
  set list
  set listchars=tab:⟶\ ,extends:›,precedes:‹,nbsp:·,trail:·
  match ErrorMsg '\s\+$'

  set noshowmode    " Hide the native mode, use the powerline
  set splitright    " Add new windows towards the right
  set splitbelow    " ... and bottom

" Text Formatting/Layout
  set ai            " autoindent
  set si            " smartindent
  set smarttab      " Use shiftwidth to tab at line beginning
  set cindent       " do c-style indenting
  set tabstop=4     " tab spacing (settings below are just to unify it)
  set softtabstop=4 " unify
  set shiftwidth=4  " unify
  set expandtab     " Give me spaces or give me death
  set nowrap        " do not wrap lines
  set nrformats=    " treat all numerals as decimal

" Files/Backups
  set autowrite                     " Save the file when shell/cmd are run
  set autoread
  set wildmenu
  set wildmode=full                 " zsh style command mode completion
  set autoread                      " No prompt for file changes outside Vim
  set swapfile                      " Keep swapfiles
  set wildignore+=tags              " Ignore tags when globbing.
  set wildignore+=tmp/**            " ...Also tmp files.
  set wildignore+=public/uploads/** " ...Also uploads.
  set wildignore+=public/images/**  " ...Also images.
  set wildignore+=vendor/**         " ...Also vendor.
  set wildignore+=.git,*.o,tmp/**,vendor/**,node_modules/**
  set isk+=_,$,@,%,#,-              " none of these should be word dividers, so make them not be
  set directory=~/.vim-tmp,~/tmp,/var/tmp,/tmp
  set backupdir=~/.vim-tmp,~/tmp,/var/tmp,/tmp

" Vim UI
  set laststatus=2                      " Show command bar
  set cmdheight=1                       " the command bar is 2 high
  set number                            " turn on line numbers
  set cpoptions+=n                      " show wrapped lines in the line number gutter
  set lz                                " do not redraw while running macros (much faster) (LazyRedraw)
  set whichwrap+=<,>,h,l                " backspace and cursor keys wrap to
  set mouse=a                           " use mouse everywhere
  set shortmess=atI                     " shortens messages to avoid 'press a key' prompt
  set report=0                          " tell us when anything is changed via :...
  set fillchars=vert:\ ,stl:\ ,stlnc:\  " make the splitters between windows be blank
  set scrolloff=5                       " Scroll when the cursor is 5 lines from edge
  set cursorline                        " Highlight current line

" Case insensitive search by default
  set ignorecase
  set smartcase

" Plugin Config
  let g:go_fmt_command = "goimports"

  let g:lightline = { 'colorscheme': 'one' }

  let NERDSpaceDelims = 1 " Spaces after comment 

  map <leader>/ <plug>NERDCommenterToggle

  map \ :NERDTreeToggle<CR>

  map <Leader>/ <plug>NERDCommenterToggle

